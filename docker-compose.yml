services:
  database:
    image: postgres:17.4-alpine3.21
    container_name: "duna-coffee-database"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
    ports:
      - "5432:5432"
    networks:
      - duna_coffee_net
    volumes:
      - postgres_data:/var/lib/postgresql/data/pgdata

  backend:
    image: '${DOCKER_IMAGE_BACKEND?Variable not set}:${TAG-latest}'
    build:
      context: .
      dockerfile: Dockerfile
    working_dir: /code
    container_name: "duna-coffee-backend"
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/utils/health-check/"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      database:
        condition: service_healthy
        restart: true
    env_file:
      - .env
    environment:
      - POSTGRES_SERVER=${POSTGRES_SERVER?Variable not set}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - PYTHONPATH=${PYTHONPATH}
    ports:
      - "8000:8000"
    networks:
      - duna_coffee_net
    # volumes:
    #   - ../:/code:cached

networks:
  duna_coffee_net:
    driver: bridge

volumes:
  postgres_data:
    external: false